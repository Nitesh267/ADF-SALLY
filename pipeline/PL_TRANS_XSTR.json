{
	"name": "PL_TRANS_XSTR",
	"properties": {
		"activities": [
			{
				"name": "Get File Details",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ABLB_IP_XSTR",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEachFile",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get File Details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get File Details').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "File Name_Det",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Filename_var_xstr",
								"value": {
									"value": "@item().Name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Xtores_Dataflow",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "File Name_Det",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "DF_XSTR",
									"type": "DataFlowReference",
									"datasetParameters": {
										"source1": {
											"Filename": {
												"value": "@variables('Filename_var_xstr')",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "Archival Delete",
							"type": "Delete",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Archival Move",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_ABLB_IP_XSTR_DYN",
									"type": "DatasetReference",
									"parameters": {
										"Filename": {
											"value": "@variables('Filename_var_xstr')",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "ls_blob_in",
										"type": "LinkedServiceReference"
									}
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Archival Move",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Xtores_Dataflow",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_ABLB_IP_XSTR_DYN",
									"type": "DatasetReference",
									"parameters": {
										"Filename": {
											"value": "@variables('Filename_var_xstr')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ABLB_ARCH",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Write Failure Log to DB for each",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Xtores_Dataflow",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_ins_adf_exec_dtls]",
								"storedProcedureParameters": {
									"ERROR_MESSAGE": {
										"value": {
											"value": "@{activity('Xtores_Dataflow').Error.message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"EXECUTION_END_DATE": {
										"value": {
											"value": "@{activity('Get File Details').ExecutionEndTime}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"EXECUTION_START_DATE": {
										"value": {
											"value": "@{activity('Get File Details').ExecutionStartTime}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"INSERT_COUNT": {
										"value": null,
										"type": "Int32"
									},
									"PIPELINE_ID": {
										"value": {
											"value": "@{activity('Get File Details').PipelineRunId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"PIPELINE_NAME": {
										"value": {
											"value": "@{activity('Get File Details').PipelineName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"PIPELINE_STATUS": {
										"value": {
											"value": "@{activity('Get File Details').Status}",
											"type": "Expression"
										},
										"type": "String"
									},
									"READ_COUNT": {
										"value": null,
										"type": "Int32"
									},
									"UPDATE_DATE_TIME": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"ACTIVITY_ID": {
										"value": {
											"value": "@activity('Get File Details').ActivityRunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"FILE_NAME": {
										"value": {
											"value": "@variables('Filename_var_xstr')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sql_out",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Delete source file",
							"type": "Delete",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Copy file to error folder",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_ABLB_IP_XSTR_DYN",
									"type": "DatasetReference",
									"parameters": {
										"Filename": {
											"value": "@variables('Filename_var_xstr')",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "ls_blob_in",
										"type": "LinkedServiceReference"
									}
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Copy file to error folder",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Write Failure Log to DB for each",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_ABLB_IP_XSTR_DYN",
									"type": "DatasetReference",
									"parameters": {
										"Filename": {
											"value": "@variables('Filename_var_xstr')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ABLB_ARCH",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Write success Log to DB",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Archival Delete",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_ins_adf_exec_dtls]",
								"storedProcedureParameters": {
									"ERROR_MESSAGE": {
										"value": null,
										"type": "String"
									},
									"EXECUTION_END_DATE": {
										"value": {
											"value": "@{activity('Get File Details').ExecutionEndTime}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"EXECUTION_START_DATE": {
										"value": {
											"value": "@{activity('Get File Details').ExecutionStartTime}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"INSERT_COUNT": {
										"value": {
											"value": "@activity('Xtores_Dataflow').output.runStatus.metrics.sink1.rowswritten",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"PIPELINE_ID": {
										"value": {
											"value": "@{activity('Get File Details').PipelineRunId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"PIPELINE_NAME": {
										"value": {
											"value": "@{activity('Get File Details').PipelineName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"PIPELINE_STATUS": {
										"value": {
											"value": "@{activity('Get File Details').Status}",
											"type": "Expression"
										},
										"type": "String"
									},
									"READ_COUNT": {
										"value": {
											"value": "@activity('Xtores_Dataflow').output.runStatus.metrics.sink1.sources.source1.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"UPDATE_DATE_TIME": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"ACTIVITY_ID": {
										"value": {
											"value": "@activity('Get File Details').ActivityRunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"FILE_NAME": {
										"value": {
											"value": "@variables('Filename_var_xstr')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sql_out",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Write Failure Log to DB",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get File Details",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_ins_adf_exec_dtls]",
					"storedProcedureParameters": {
						"ERROR_MESSAGE": {
							"value": {
								"value": "@{activity('Get File Details').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"EXECUTION_END_DATE": {
							"value": {
								"value": "@{activity('Get File Details').ExecutionEndTime}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"EXECUTION_START_DATE": {
							"value": {
								"value": "@{activity('Get File Details').ExecutionStartTime}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"INSERT_COUNT": {
							"value": null,
							"type": "Int32"
						},
						"PIPELINE_ID": {
							"value": {
								"value": "@{activity('Get File Details').PipelineRunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"PIPELINE_NAME": {
							"value": {
								"value": "@{activity('Get File Details').PipelineName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"PIPELINE_STATUS": {
							"value": {
								"value": "@{activity('Get File Details').Status}",
								"type": "Expression"
							},
							"type": "String"
						},
						"READ_COUNT": {
							"value": null,
							"type": "Int32"
						},
						"UPDATE_DATE_TIME": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"ACTIVITY_ID": {
							"value": {
								"value": "@activity('Get File Details').ActivityRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"FILE_NAME": {
							"value": {
								"value": "@variables('Filename_var_xstr')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sql_out",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"Filename_var_xstr": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-06-26T05:10:53Z"
	}
}